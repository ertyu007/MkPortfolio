// src/components/AIChatbot.jsx
import React, { useState } from 'react';
import { useProjects } from '../hooks/useProjects';
import { aiChatResponse } from '../utils/ai'; // ‚úÖ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô aiChatResponse

const AIChatbot = () => {
  const [input, setInput] = useState('');
  const [messages, setMessages] = useState([]);
  const { projects } = useProjects();

  const handleSubmit = async (e) => {
    e.preventDefault();
    if (!input.trim()) return;

    const userMessage = { text: input, sender: 'user' };
    setMessages(prev => [...prev, userMessage]);

    // ‡∏î‡∏∂‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏•‡∏á‡∏≤‡∏ô
    const projectTitles = projects?.map(p => `"${p.title}"`).join(', ') || '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ú‡∏•‡∏á‡∏≤‡∏ô';

    // ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á prompt ‡πÉ‡∏´‡πâ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏Å‡∏±‡∏ö GPT-2
    const prompt = `
‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢ AI ‡∏Ç‡∏≠‡∏á‡∏ô‡∏±‡∏Å‡∏û‡∏±‡∏í‡∏ô‡∏≤ "[‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏∏‡∏ì]"
‡∏ú‡∏•‡∏á‡∏≤‡∏ô: ${projectTitles}
‡∏Ñ‡∏≥‡∏ñ‡∏≤‡∏°: "${input}"
‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö:
`;

    try {
      const response = await aiChatResponse(prompt);
      setMessages(prev => [...prev, { text: response, sender: 'bot' }]);
    } catch (err) {
      console.error("AI Chatbot Error:", err);
      setMessages(prev => [...prev, {
        text: `‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡∏ñ‡∏≤‡∏°‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö "${input}" ‚Äî ‡∏â‡∏±‡∏ô‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏´‡πâ‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î!`,
        sender: 'bot'
      }]);
    }

    setInput('');
  };

  return (
    <div className="fixed bottom-20 right-5 w-80 bg-white dark:bg-gray-800 rounded-lg shadow-lg overflow-hidden z-50">
      <div className="bg-indigo-600 text-white p-3 font-bold">AI Assistant</div>
      <div className="h-64 p-3 overflow-y-auto">
        {messages.length === 0 && (
          <div className="text-gray-500 text-sm mb-2">
            ‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ! üòä ‡∏â‡∏±‡∏ô‡∏Ñ‡∏∑‡∏≠‡∏ú‡∏π‡πâ‡∏ä‡πà‡∏ß‡∏¢ AI ‡∏Ç‡∏≠‡∏á [‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏∏‡∏ì] ‚Äî ‡∏ñ‡∏≤‡∏°‡∏≠‡∏∞‡πÑ‡∏£‡∏Å‡πá‡πÑ‡∏î‡πâ‡∏ô‡∏∞!
          </div>
        )}
        {messages.map((msg, i) => (
          <div
            key={i}
            className={`mb-2 p-2 rounded-lg max-w-xs whitespace-pre-wrap ${msg.sender === 'user' ? 'bg-indigo-100 dark:bg-indigo-900/30 ml-auto' : 'bg-gray-200 dark:bg-gray-700'}`}
          >
            {msg.text}
          </div>
        ))}
      </div>
      <form onSubmit={handleSubmit} className="p-3 border-t">
        <input
          type="text"
          value={input}
          onChange={(e) => setInput(e.target.value)}
          placeholder="‡πÄ‡∏ä‡πà‡∏ô '‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ', '‡∏°‡∏µ‡∏ú‡∏•‡∏á‡∏≤‡∏ô‡∏≠‡∏∞‡πÑ‡∏£‡∏ö‡πâ‡∏≤‡∏á?'"
          className="w-full px-3 py-1 border rounded focus:outline-none focus:ring"
        />
      </form>
    </div>
  );
};

export default AIChatbot;